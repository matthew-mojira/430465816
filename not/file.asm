;; COMPILED WITH VERSION 0
fastrom
hirom

;; OTHER IMPORTANT FILES

incsrc "defines.asm"

;;	ROM HEADER INFORMATION

ORG $00FFB0	
	db	"ID"	; MAKER CODE (2 Bytes)
	db	"2234"	; GAME CODE (4 Bytes)
	db	$00, $00, $00, $00, $00, $00, $00	; hardcoded
	db	$00		; EXPANSION RAM SIZE
	db	$00		; SPECIAL VERSION (normally $00)
	db	$00		; CARTRIDGE SUB-NUMBER (normally $00)
	db 	"INTERNAL ROM NAME 21B"	; GAME TITLE (21 Bytes)
	db	$31		; MAP MODE (fastrom, hirom)
	db	$00		; CARTRIDGE TYPE (ROM only)
	db	$07		; ROM SIZE (2^7 KB = 128KB)	-- corresponds to bank C0-C1
	db	$00		; RAM SIZE (0 means 0KB)
	db	$01		; DESTINATION CODE (north america)
	db 	$33		; hardcoded
	db	$00		; MASK ROM VERSION (Ver 1.0)
	
	
;; INTERRUPT VECTOR INFORMATION
	
ORG $00FFE0	
	;;	N/A	   N/A    COP    BRK   ABORT   NMI    RESET    IRQ  
	dw $0000, $0000, $0000, $0000, $0000, I_NMI, I_RESET, I_IRQ		; NATIVE
	dw $0000, $0000, $0000, $0000, $0000, I_NMI, I_RESET, I_IRQ		; EMULATION
	
	
;;	INITIALIZATION ROUTINES
	
ORG $C08000	; hirom bank starts at $C00000
I_RESET:
	CLC			; clear carry flag
	XCE			; exchange carry and emulation (this turns off emulation mode)
	ROL $420D	; rotate left cycle speed designation (3.58MHz --> 2.68MHz?)
	JML F_RESET
F_RESET:
	REP #$30	; accumulator 16-bit
	LDX #$1FFF	; 
	TXS			; transfer X to Stack
	JSL ClearRegs
	JSL ClearMemory
	SEP #$20	; accumulator 8-bit
	LDA #$C0	; have the automatic read of the SNES read the first pair of JoyPads
	STA $4201	; IO Port Write Register

	LDA #$81	
	STA $4200	; enable NMI interrupt and autojoypad
	
-	NOP
	JSL	main
	NOP

 	WAI
	
	BRA -		; infinite loop to end code
I_NMI:
	JSL vblank
	RTI			; ReTurn from Interrupt
I_IRQ:
	RTI			; ReTurn from Interrupt

ClearRegs:
	PHP			; push processor status register
	
	SEP #$20	; accumulator 8-bit
	LDA	#$80
	
	; A = %10000000
	
	STA $2100	; screen display register (a---bbbb: a = disable screen, b = brightness)
	STZ $2101	; OAM size and data area designation (aaabbccc: a = size, b = name selection, c = base selection)
	STZ $2102	; address for accessing OAM	
	STZ $2103	; address for accesting OAM 
	STZ $2104	; OAM data write
	STZ $2105	; 
	STZ $2106
	STZ $2107
	STZ $2108
	STZ $2109
	STZ $210A
	STZ $210B
	STZ $210C
	STZ $210D
	STZ $210D
	STZ $210E
	STZ $210E
	STZ $210F
	STZ $210F
	STZ $2110
	STZ $2110
	STZ $2111
	STZ $2111
	STZ $2112
	STZ $2112
	STZ $2113
	STZ $2113
	STZ $2114
	STZ $2114
	STA $2115
	STZ $2116
	STZ $2117
	STZ $211A
	LDA #$01
	STZ $211B
	STA $211B
	STZ $211C
	STZ $211C
	STZ $211D
	STZ $211D
	STZ $211E
	STA $211E
	STZ $211F
	STZ $211F
	STZ $2120
	STZ $2120
	STZ $2121
	STZ $2123
	STZ $2124
	STZ $2125
	STZ $2126
	STZ $2127
	STZ $2128
	STZ $2129
	STZ $212A
	STZ $212B
	STZ $212C
	STZ $212D
	STZ $212E
	LDA #$30
	STA $2130
	STZ $2131
	LDA #$E0
	STA $2132
	STZ $2133
	STZ $4200
	STZ $4202
	STZ $4203
	STZ $4204
	STZ $4205
	STZ $4206
	STZ $4207
	STZ $4208
	STZ $4209
	STZ $420A
	STZ $420B
	STZ $420C
	STZ $420D
	
	PLP
	RTL
	
ClearMemory:
	PHP
	PHB
	;	this line causes crashes PEA $0000
	PHK
	PLB
	SEP #$20
	REP #$10
	
	STZ $00
	STZ $2115
	LDX.W #0
	STX $2116
	STX $2102
	STZ $2121
	STX $4302
	STX $4312
	STX $4322
	LDA #$7E
	STA $4304
	STA $4314
	STA $4324
	
	STX $4305
	LDX #$200
	STX $4315
	LDX #$220
	STX $4325
	
	LDA #$18
	STA $4301
	LDA #$22
	STA $4311
	LDA #$04
	STA $4321
	
	LDA #$09
	STA $4300
	LDA #$9A
	STA $4310
	STA $4320
	
	LDA #7
	STA $420B
	

	
	; clear WRAM
	
	REP #$30
	LDA #$0000
	LDX #$0FFE
-	STA.L $7E0000,X
	STA.L $7E1000-4,X
	STA.L $7E2000,X
	STA.L $7E3000,X
	STA.L $7E4000,X
	STA.L $7E5000,X
	STA.L $7E6000,X
	STA.L $7E7000,X
	STA.L $7E8000,X
	STA.L $7E9000,X
	STA.L $7EA000,X
	STA.L $7EB000,X
	STA.L $7EC000,X
	STA.L $7ED000,X
	STA.L $7EE000,X
	STA.L $7EF000,X
	STA.L $7F0000,X
	STA.L $7F1000,X
	STA.L $7F2000,X
	STA.L $7F3000,X
	STA.L $7F4000,X
	STA.L $7F5000,X
	STA.L $7F6000,X
	STA.L $7F7000,X
	STA.L $7F8000,X
	STA.L $7F9000,X
	STA.L $7FA000,X
	STA.L $7FB000,X
	STA.L $7FC000,X
	STA.L $7FD000,X
	STA.L $7FE000,X
	STA.L $7FF000,X
	DEX #2
	BMI +
	BRL -
	
+	PLB
	PLP
	RTL

PushScratchToStack:

	
	RTL
	
PullScratchFromStack:

	
	RTL

	
ORG $C10000		


	
;; START OF PROGRAM DATA
	
main:
	LDA #$1F
	STA !INIDISP
	
	
	
	
	
	LDA $15

	STA $210E
	STZ $210E
	LDA $14

	STA $210D
	STZ $210D
	
	INC $36
	LDA $36
	CMP #$03
	BEQ controllerd
	
	RTL
	
controllerd:
	STZ $36
	LDA $60
	AND #%00001000	
	CMP #%00001000	
	BEQ .up
-	LDA $60
	AND #%00000100	
	CMP #%00000100	
	BEQ .down
	
		
--	LDA $60
	AND #%00000010	
	CMP #%00000010	
	BEQ .left
---	LDA $60
	AND #%00000001	
	CMP #%00000001	
	BEQ .right
	
----	
	LDA $60
	AND #%10000000	
	CMP #%10000000	
	BEQ	.b
	
	LDA $60
	AND #%01000000	
	CMP #%01000000	
	BEQ	.y
	
	
	
----- NOP




	RTL
.up:
	INC $15
	BRA -
.down:
	DEC $15
	BRA --
.left:
	INC $14
	BRA ---
.right:
	DEC $14
	BRA ----
.b:
	DEC $19
	BRA -----
.y:
	INC $19
	BRA -----

	
	RTL
set_white_screen:
	LDA #$00
	STA !CGADD
	LDA #$FF
	STA !CGDATA
	LDA #$FF
	STA !CGDATA
	RTL
fadeout_screen:
	JSL set_white_screen
fadeout:
	LDY  #$000f	
loop:
	LDX  #$0006	
	DEY			  
	STY  $2100
wait:
	LDA  $4210	 
	AND  #$80
	BEQ  wait	  
	DEX			  
	CPX  #$0000
	BNE  wait	  
	CPY  #$0000	
	BNE  loop	  
	LDX  #$00cf
dark:
	LDA  $4210	 
	AND  #$80
	BEQ  dark	  
	DEX
	CPX  #$0000
	BNE  dark	  
	RTL
set_screen_color_to_controller:
	LDA !JOY1L
	STA !controller1p1
	LDA !JOY1H
	STA !controller1p2
	LDA #$00
	STA !CGADD
	LDA !JOY1L
	STA !CGDATA
	LDA !JOY1H
	STA !CGDATA
	LDA #$00
	CLC
	ADC !main_loop
	ADC #1

	STA !main_loop
	JSL set_screen_color_to_controller
	RTL
vblank:

LDA $4212	
AND #%00000001	
BNE vblank	
NOP
LDA $4219	
STA $60




	LDA #$00
	CLC
	ADC !vblank_loop
	ADC #1

	STA !vblank_loop
	JSL random_color_loop
	RTL
-	LDA $4212
	ASL #7
	LSR #7
	AND #$00
	CMP #$00
	BEQ	gogogo
	BRA	-

gogogo:
	LDA $4219
	STA $60
	
	RTL




random_color_loop:
		
		
	LDX #$0800
	STX $2116
	
	LDA $19
	LSR #4
	STA $2118
	
	LDX #$0801
	STX $2116
	
	LDA $19
	AND #$0F
	STA $2118
	
	LDA $13
	CMP $19
	BEQ ChangeColor
	
	

come_back:	
	CLC
	LDA $FF
	CMP #$01
	BNE continue
	
	RTL
	

ChangeColor:
	LDA #$00
	STA $13


	REP #$30	
	INC $30
	SEP #$30	
	
	
	LDA #$00
	STA $2121
	
	JSL UseRandomInThing
	JSL UseRandomInThing
	JSL UseRandomInThing
	JSL UseRandomInThing


	
	BRL come_back
	
UseRandomInThing:
	JSL GetRand
	LDA $50
	STA $2122
	LDA $51
	STA $2122
	RTL


continue:
	LDA #$01
	STA $FF
	
	REP #%00010000  
	SEP #%00100000  
	

	
	JSL PaletteTransfer

	lda #$80
	 sta $2115
	 ldx #$0000			
	 stx $2116		 
	 lda #$C0		  
	 ldx #$0000			
	 ldy #$800			
	 JSL LoadVRAM
	
	stz $2105		 

	lda #$08
	sta $2107		 
	stz $210B		 

	lda #$01
	sta $212C	
	
	lda #$80
	 sta $2115
	 ldx #$0800
	 stx $2116
	 ldx #$0001
	 stx $2118
	
	LDX #$0800
	STX $2116

	LDA #$18
	STA $4311

	LDA #$C0
	STA $4314

	LDX #$4000
	STX $4312

	LDX #$0800
	STX $4315

	LDA #$01
	STA $4310

	LDA #$02
	STA $420B	
	
	RTL

LoadVRAM:
	
	 php			

	 stx $4302	
	 sta $4304	
	 sty $4305	

	 lda #$01
	 sta $4300	
	 lda #$18	 
	 sta $4301
	 lda #$01	 
	 sta $420B

	 plp			
	 RTL			
	

	
	
	
	
	
	
	
	
	RTL




GetRand:				  PHY													
							 LDY.B #$01										  
							 JSL CODE_01AD07									
							 DEY													
							 JSL CODE_01AD07									
							 PLY													
							 RTL													
																					 
CODE_01AD07:			 LDA.W $40									 
							 ASL A												 
							 ASL A												 
							 SEC													
							 ADC.W $40									 
							 STA.W $40									 
							 ASL.W $40+1								  
							 LDA.B #$20										  
							 BIT.W $40+1								  
							 BCC CODE_01AD21									
							 BEQ CODE_01AD26									
							 BNE CODE_01AD23									
CODE_01AD21:			 BNE CODE_01AD26									
CODE_01AD23:			 INC.W $40+1								  
CODE_01AD26:			 LDA.W $40+1								  
							 EOR.W $40									 
							 STA.W $50,Y							
							 RTL													
					  
					  
PaletteTransfer:


	LDA #$00
	STA $2121
	LDA #$C1
	LDX #$8000
	LDY #$00FF
	
	PHB
	PHP
	
	STX $4302
	STA $4304
	STY $4305
	
	STZ $4300	
	LDA #$22	
	STA $4301	
	
	
	
	LDA #$01
	STA $420B
	
	PLP
	PLB
	
	RTL
	
GraphicsTransfer:
	REP #%00010000  
	SEP #%00100000  
		
	lda #$01
	sta $212C	
	
	 lda #$80
	 sta $2115
	 ldx #$0400
	 stx $2116
	 lda #$01
	 sta $2118
	
	LDX #$0400
	STX $2116

	LDA #$18
	STA $4311

	LDA #$C0
	STA $4314

	LDX #$4000
	STX $4312

	LDX #$0400
	STX $4315

	LDA #$01
	STA $4310

	LDA #$02
	STA $420B	
	
	
	
	
	
	LDA #$04
	STA $2107
	STZ $210B
	STZ $2105	
	
	LDA #$80	
	STA $2115	
	
	LDX #$0000
	STX $2116
	LDA #$C0
	LDX #$0000
	LDY #$0000
	
	JSL DoTransfer
	

	
	
	

	
	
	



	
	
	 RTL			
	
	
	
DoTransfer:
	phb
	 php			

	 stx $4302	
	 sta $4304	
	 sty $4305	

	 lda #$01
	 sta $4300	
	 lda #$18	 
	 sta $4301
	 lda #$01	 
	 sta $420B

	 plp			
	 plb
	
	RTL
	
	
ORG $C00000
incbin "graphics.bin"

HelloWorld:
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0060, #$0061, #$0062, #$0063, #$0064, #$0065, #$0066, #$0067, #$0068, #$0069, #$006A, #$006B,  #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0070, #$0071, #$0072, #$0073, #$0074, #$0075, #$0076, #$0077, #$0078, $0079, #$007A, #$007B, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010
	dw #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010, #$0010

ORG $C18000
incbin "graphics.pal"


;; END OF PROGRAM 

RTL

ORG $C1FFFF
NOP
